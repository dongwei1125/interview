import{_ as a,c as o,o as t,ae as c}from"./chunks/framework.YbMd5chc.js";const u=JSON.parse('{"title":"说说JavaScript中的数据类型？存储上的差别？","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/data-type.md","filePath":"javascript/data-type.md","lastUpdated":1758027617000}'),d={name:"javascript/data-type.md"};function i(r,e,l,n,s,p){return t(),o("div",null,[...e[0]||(e[0]=[c('<h1 id="说说javascript中的数据类型-存储上的差别" tabindex="-1">说说JavaScript中的数据类型？存储上的差别？ <a class="header-anchor" href="#说说javascript中的数据类型-存储上的差别" aria-label="Permalink to &quot;说说JavaScript中的数据类型？存储上的差别？&quot;">​</a></h1><p><code>JavaScript</code> 中数据类型分为简单数据类型和复杂数据类型</p><p>其中简单数据类型包括 <code>string</code> <code>boolean</code> <code>number</code> <code>undefined</code> <code>null</code> <code>symbol</code> <code>bigint</code> 其中 <code>symbol</code> 和 <code>bigint</code> 为 <code>ES6</code> 新增的数据类型 复杂数据类型统称为 <code>Object</code>，例如 <code>Object</code> <code>Array</code> <code>Function</code> 等等</p><h2 id="存储方式" tabindex="-1">存储方式 <a class="header-anchor" href="#存储方式" aria-label="Permalink to &quot;存储方式&quot;">​</a></h2><ul><li>简单数据类型将变量值保存在栈上</li><li>复杂数据类型将原始数据保存在堆上，堆内存地址保存在栈上</li></ul><h2 id="赋值方式" tabindex="-1">赋值方式 <a class="header-anchor" href="#赋值方式" aria-label="Permalink to &quot;赋值方式&quot;">​</a></h2><ul><li>简单数据类型为变量值复制</li><li>复杂数据类型为内存地址的复制</li></ul>',7)])])}const h=a(d,[["render",i]]);export{u as __pageData,h as default};
